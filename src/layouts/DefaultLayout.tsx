import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Layout.module.css';
import { Children, ReactNode, useEffect, useState } from 'react';
import Grid from '@mui/material/Grid';
import Navbar from '@/components/Navbar/Navbar';
import Header from '@/components/Header/Header';
import { Outlet } from '@mui/icons-material';
import { useRouter } from 'next/router';
import GridWrapper from "@/components/common/GridWrapper/GridWrapper";
import {App, ColorPicker, ColorPickerProps} from "antd";

const inter = Inter({ subsets: ['latin'] });

const DefaultLayout: React.FC<{ children: ReactNode }> = ({ children }) => {
    const [title, setTitle] = useState<string>('');
    const { message } = App.useApp();
    const [value, setValue] = useState<string>('#3d5f8f');

    const location = useRouter().pathname;

    useEffect(() => {
        const parsedTitle = location.replace(/\W/g, ' ');
        setTitle(parsedTitle);
    }, [location]);
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <meta
                    name='viewport'
                    content='width=device-width, initial-scale=1'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>

            <Grid container sx={{ bgcolor: '#555' }}>
                <Navbar />
                <Header title={title} />
            </Grid>
            <GridWrapper color={value}>
                {children}
                <div style={{marginTop: 50}}>
                    <ColorPicker
                        value={value}
                        onChangeComplete={(color) => {
                            setValue(color.toHexString());
                        }}
                    />
                </div>
            </GridWrapper>
        </>
    );
};

export default DefaultLayout;
